// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PermissionManager
import AVFoundation
import Foundation
@_exported import PermissionManager
import Photos
import Swift
import UserNotifications
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum PermissionStatusType : Swift.Int {
  case notDetermined
  case restricted
  case denied
  case authorized
  case limited
  case provisional
  case ephemeral
  case unknown
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public class PermissionManagerClass {
  public init()
  @objc deinit
  public func unreference()
  public func setCallback(callback: any PermissionManager.PermissionCallbackProtocol)
  public func getDevicePermissionStatus(permission: PermissionManager.PermissionType) -> PermissionManager.PermissionStatusType
  public func notificationSettingsType() -> PermissionManager.PermissionStatusType
  public func checkNotificationSettings() -> UserNotifications.UNAuthorizationStatus
  public func requestPermission(permission: PermissionManager.PermissionType)
  public func requestPermissionWithCallback(permission: PermissionManager.PermissionType, completion: @escaping (_ succeed: Swift.Bool) -> Swift.Void)
}
public protocol PermissionCallbackProtocol {
  func onNotDetermined(_ type: PermissionManager.PermissionType)
  func onAuthorized(_ type: PermissionManager.PermissionType)
  func onDenined(_ type: PermissionManager.PermissionType)
}
public enum PermissionType {
  case camera
  case microphone
  case photo
  case notification
  public static func == (a: PermissionManager.PermissionType, b: PermissionManager.PermissionType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension PermissionManager.PermissionStatusType : Swift.Equatable {}
extension PermissionManager.PermissionStatusType : Swift.Hashable {}
extension PermissionManager.PermissionStatusType : Swift.RawRepresentable {}
extension PermissionManager.PermissionType : Swift.Equatable {}
extension PermissionManager.PermissionType : Swift.Hashable {}
